name: Build/release

on: 
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  release:
    name: Create Github Release
    runs-on: ubuntu-latest
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: true
        prerelease: true

    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt 

  build:
    runs-on: ${{ matrix.os }}
    needs: [release]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Install Dependencies
        run: bun install && cd application && bun run build:ogiaddon
      
      - name: Build Release Client
        run: cd application && bun run preelectron-pack && bun run electron-pack

      - name: Build Release Updater
        run: cd updater && bun run electron-pack
          
      - name: Zip for Windows Portable
        if: matrix.os == 'windows-latest'
        run: |
          Compress-Archive -Path application/dist/win-unpacked/* -Destination application/dist/OpenGameInstaller-Portable.zip

      - name: Upload Release Portable Windows
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: application/dist/OpenGameInstaller-Portable.zip
          asset_name: OpenGameInstaller-Portable.zip
          asset_content_type: application/zip
      
      - name: Upload Setup Windows
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: updater/dist/OpenGameInstaller-Setup.exe
          asset_name: OpenGameInstaller-Setup.exe
          asset_content_type: application/octet-stream

      - name: Upload Setup Linux
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: updater/dist/OpenGameInstaller-Setup.AppImage
          asset_name: OpenGameInstaller-Setup.AppImage
          asset_content_type: application/octet-stream
      
      - name: Upload Release Linux
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: application/dist/OpenGameInstaller-Portable.AppImage
          asset_name: OpenGameInstaller-linux-pt.AppImage
          asset_content_type: application/octet-stream