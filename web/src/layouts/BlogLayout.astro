---
import Layout from "./Layout.astro";
const { frontmatter } = Astro.props;
import { Image } from 'astro:assets';
import GitHubLogo from '../../public/github-mark.svg';
import Favicon from '../../public/favicon.png';
const sectionName = frontmatter.section;
const part: number = frontmatter.part;

function hasExactlyTwoSlashes(str: string) {
  const regex = /^[^/]*\/[^/]*\/[^/]*$/;
  return regex.test(str) || str === "/docs";
}
// now read each part of the section
// read every document in the docs folder, and get the basename of the file
let docsInSection = await Astro.glob(`../**/*.{md,mdx}`);
let sections: string[] = []

docsInSection.map((doc) => {
  const section = doc.frontmatter.section
  if (sections.includes(section)) {
    return;
  }
  sections.push(section);
})

// sort sections by the index.md's (part 0) priority #
sections = sections.sort((a, b) => {
  const partA = docsInSection.find((doc) => doc.frontmatter.section === a && doc.frontmatter.part === 0);
  if (partA === undefined) {
    throw new Error(`Section ${a} does not have a part 0, index.md`);
  }
  const partB = docsInSection.find((doc) => doc.frontmatter.section === b && doc.frontmatter.part === 0);
  if  (partB === undefined) {
    throw new Error(`Section ${b} does not have a part 0, index.md`);
  }
  return partA.frontmatter.priority - partB.frontmatter.priority;
});
docsInSection.sort((a, b) => a.frontmatter.part - b.frontmatter.part);

let docsConnectedToSections: Map<string, any[]> = new Map();
for (let section of sections) {
  docsConnectedToSections.set(section, docsInSection.filter((doc) => {
    const docSection = doc.frontmatter.section;
    return docSection === section;
  }));
}
// sort docs by part, descending to ascending
const previousSection = part - 1 >= 0 ? docsConnectedToSections.get(sectionName)!![part - 1] : null;
const nextSection = part + 1 < docsConnectedToSections.get(sectionName)!!.length ? docsConnectedToSections.get(sectionName)!![part + 1] : null;
const selectedSection = docsConnectedToSections.get(sectionName)!![part];
console.log(part)
---

<Layout title={frontmatter.title}>
  <header class="flex flex-row justify-start items-center py-4 px-8 gap-4 border-b-2 border-slate-300 shadow-lg">
    <a href="/" class="appearance-none flex flex-row justify-start items-center gap-2 ">
      <Image class="w-12 drop-shadow-xl" src={Favicon} alt="OpenGameInstaller Logo" />
      <h1 class="font-archivo font-bold hidden lg:block text-xl truncate">OpenGameInstaller Docs</h1>
    </a>

    <a href="https://github.com/Nat3z/OpenGameInstaller" class="ml-auto hidden lg:flex flex-row justify-center items-center gap-2 font-archivo hover:bg-slate-300 p-4 py-2 rounded-lg transition-colors text-slate-500">
      <h1 class="font-archivo font-bold text-lg">GitHub</h1>
    </a>

  </header>

  <main class="flex flex-col-reverse lg:flex-row justify-start items-start">
    <div class="h-full bg-slate-100 w-full lg:w-3/12 py-8 px-4 flex flex-col pl-8 gap-1">
      {sections.map((section) => 
        <>
          <a href={`${docsConnectedToSections.get(section)?.find((val) => val.frontmatter.part === 0)?.url}`} class={`flex flex-row justify-start items-center hover:bg-slate-200 transition-colors rounded-lg px-4 py-2 ${section === sectionName && 'bg-slate-300'}`}>
            {section}
            {docsConnectedToSections.get(section)!!.length > 1 && <>
              <svg class={`${section === sectionName ? '' : 'rotate-180'} ml-auto fill-slate-700`} xmlns="http://www.w3.org/2000/svg" height="18px" viewBox="0 -960 960 960" width="28px" ><path d="M480-528 296-344l-56-56 240-240 240 240-56 56-184-184Z"/></svg>
            </>}
          </a>

          {section === sectionName && <>
            <div class="flex flex-col pl-4 border-l-2 border-l-slate-300 gap-1">
              {docsConnectedToSections.get(section)!!.map((doc) => (
                doc.frontmatter.part !== 0 && 
                  <a href={doc.url} class={`px-4 py-2 hover:bg-slate-200 transition-colors rounded-lg ${selectedSection.frontmatter.title === doc.frontmatter.title && 'bg-slate-300'}`}>
                    {doc.frontmatter.title}
                  </a>
              ))}
              </div>
            </>
          }
          
        </>
      )}
    </div>
    <div class="min-h-screen w-full lg:w-9/12 p-8 lg:p-12 bg-slate-200">
      {(frontmatter.showTopBar || frontmatter.showTopBar === undefined) && (
        <div class="flex flex-col justify-start items-start border-b-2 border-slate-300 pb-4 w-full mb-4 gap-2">
          <h1 class="font-archivo font-bold text-3xl lg:text-5xl w-fit">{frontmatter.title}</h1>
        </div>
      )}

      <article class="lg:p-2">
        <slot />
      </article>

      <div class="flex flex-col lg:flex-row justify-start items-center mt-8 gap-4">
        {previousSection && (
          <a href={previousSection.url} class="border-slate-300 hover:border-slate-400 border-2 w-72 h-24 rounded-lg py-8 px-4 flex flex-row justify-start items-center gap-4 ">
            <span class="material-symbols-outlined">arrow_back</span>
            <div class="flex flex-col mr-auto">
              <p class="text-slate-400">Previous</p>
              <h1 class="text-lg">{previousSection.frontmatter.title}</h1>
            </div>
          </a>
        )}
        {nextSection && (
          <a href={nextSection.url} class="border-slate-300 hover:border-slate-400 border-2 w-72 h-24 rounded-lg py-8 px-4 flex flex-row justify-end items-center gap-4 ">
            <div class="flex flex-col mr-auto">
              <p class="text-slate-400">Next</p>
              <h1 class="text-lg">{nextSection.frontmatter.title}</h1>
            </div>
            <span class="material-symbols-outlined">arrow_forward</span>
          </a>
        )}
      </div>
    </div>
  </main>
</Layout>

<style>
  article {
    h1 {
      @apply text-2xl lg:text-4xl font-semibold border-b-2 border-slate-300 pb-2 pr-8 my-2;
    }
    h2 {
      @apply text-xl lg:text-3xl font-semibold border-b-2 border-slate-300 pb-2 pr-8 my-2;
    }
    h3 {
      @apply text-2xl font-semibold;
    }
    p {
      @apply text-lg font-normal;
    }
    ul {
      @apply list-disc list-inside;
    }
    ol {
      @apply list-decimal list-inside;
    }
    code {
      @apply text-slate-800 rounded-md bg-slate-300 p-1;
    }
    pre {
      @apply text-slate-800 p-4 rounded-md;
    }
    pre code {
      @apply !bg-transparent !p-0;
    }
    a {
      @apply text-blue-500 underline;
    }

    table {
      @apply w-full border-collapse;
    }
    th, td {
      @apply border border-slate-300 p-2;
    }
    th {
      @apply bg-slate-300;
    }
    @apply flex flex-col gap-2;
    
  }

  header {
    inset: 0;
		width: 100%;
		background-image: linear-gradient(to right, #80808012 1px, transparent 1px),
    linear-gradient(to bottom, #80808012 1px, transparent 1px);
		background-size: 24px 24px;
  }
</style>