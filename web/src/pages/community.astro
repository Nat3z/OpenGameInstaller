---
import { Image } from "astro:assets";
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header.astro";
let addons = await Astro.glob(`../../community/*.{md,mdx}`);
addons = addons.filter((addon) => addon.frontmatter.name !== 'YOUR ADDON NAME');
addons = addons.sort((a, b) => a.frontmatter.name.localeCompare(b.frontmatter.name));
---

<Layout title="Community Addons">
  <Header context="site" />
  <main class="mt-8">
    <div class="mx-auto max-w-7xl w-full px-4 lg:px-8 flex flex-col gap-6 items-center">
      <div class="w-full text-center flex flex-col gap-2">
        <h1 class="text-3xl lg:text-5xl font-archivo font-bold text-slate-800">Community Addons</h1>
        <p class="text-slate-600 lg:text-lg">Community addons are not affiliated with OpenGameInstaller. This is a community listing and anyone can add to this list.</p>
        <a href="/docs/for-users/community" class="text-accent-dark underline underline-offset-2 hover:text-accent transition-colors">Learn how to add your addon to this list</a>
      </div>

      <div class="w-full max-w-xl flex items-center gap-2">
        <input id="addon-search" type="search" placeholder="Search addons by name, author, or description" class="w-full px-4 py-2 rounded-lg ring-1 ring-accent-light focus:ring-accent outline-none bg-white/80" />
      </div>

      <div id="addons-grid" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 w-full">
        {addons.map((addon) => (
          <div class="flex flex-col gap-3 rounded-xl p-4 bg-white/80 ring-1 ring-accent-light shadow-sm hover:shadow-md transition" data-name={addon.frontmatter.name} data-author={addon.frontmatter.author}>
            <div class="flex items-center gap-3">
              <img src={addon.frontmatter.img} alt={addon.frontmatter.name} class="w-14 h-14 rounded-lg object-cover" />
              <div class="flex flex-col">
                <h2 class="text-xl font-bold text-slate-800">{addon.frontmatter.name}</h2>
                <p class="text-slate-500 text-sm">by {addon.frontmatter.author}</p>
              </div>
            </div>
            <div class="flex items-center gap-2">
              <button type="button" class="text-xs px-2 py-1 rounded-md ring-1 ring-accent-light bg-accent-lighter text-slate-700 hover:bg-accent-light transition" data-source>{addon.frontmatter.source}</button>
              <a href={addon.frontmatter.source} target="_blank" rel="noreferrer" class="text-xs px-2 py-1 rounded-md ring-1 ring-accent-light hover:bg-accent-lighter transition text-slate-700">Open</a>
            </div>
            <div class="prose prose-slate max-w-none" set:html={addon.compiledContent()}></div>
          </div>
        ))}
      </div>
    </div>
  </main>

</Layout>
<script>
  function copyToClipboard(text: string, target: HTMLElement) {
    const dummy = document.createElement("textarea");
    document.body.appendChild(dummy);
    dummy.value = text;
    dummy.select();
    document.execCommand("copy");
    document.body.removeChild(dummy);

    target.insertAdjacentHTML('beforeend', ` <img src="/check-icon.svg" class="w-4 h-4 inline ml-1" />`);
    setTimeout(() => { target.textContent = text; }, 1500);
  }

  document.addEventListener("click", (e) => {
    if (e.target instanceof HTMLElement && e.target.getAttribute("data-source") !== null) {
      copyToClipboard(e.target.textContent!!, e.target);
    }
  });

  const search = document.getElementById('addon-search') as HTMLInputElement | null;
  const grid = document.getElementById('addons-grid');
  if (search && grid) {
    search.addEventListener('input', () => {
      const q = search.value.trim().toLowerCase();
      const items = Array.from(grid.children) as HTMLElement[];
      for (const item of items) {
        const name = (item.getAttribute('data-name') || '').toLowerCase();
        const author = (item.getAttribute('data-author') || '').toLowerCase();
        const text = item.textContent?.toLowerCase() || '';
        const show = !q || name.includes(q) || author.includes(q) || text.includes(q);
        item.style.display = show ? '' : 'none';
      }
    });
  }
</script>
